<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tests_8cpp_source" xml:lang="en-US">
<title>tests.cpp</title>
<indexterm><primary>src/tests.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_tests_8cpp_source_1l00001"/><link linkend="_tests_8cpp_1a656eb5868e824d59f489f910db438420">00001</link> <emphasis role="preprocessor">#define&#32;CATCH_CONFIG_MAIN</emphasis>
<anchor xml:id="_tests_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;catch.hpp&quot;</emphasis>
<anchor xml:id="_tests_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_student_8h">student.h</link>&quot;</emphasis>
<anchor xml:id="_tests_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_human_8h">human.h</link>&quot;</emphasis>
<anchor xml:id="_tests_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_manolib_8h">manolib.h</link>&quot;</emphasis>
<anchor xml:id="_tests_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_functions_8h">functions.h</link>&quot;</emphasis>
<anchor xml:id="_tests_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_vector_8h">vector.h</link>&quot;</emphasis>
<anchor xml:id="_tests_8cpp_source_1l00008"/>00008 
<anchor xml:id="_tests_8cpp_source_1l00009"/>00009 
<anchor xml:id="_tests_8cpp_source_1l00010"/><link linkend="_tests_8cpp_1aecce09c376d8f167628ba794c11455c3">00010</link> <link linkend="_tests_8cpp_1aecce09c376d8f167628ba794c11455c3">TEST_CASE</link>(<emphasis role="stringliteral">&quot;Studentu&#32;klases&#32;penkiu&#32;pirstu&#32;taisykles&#32;testas&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00011"/>00011 {
<anchor xml:id="_tests_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student1(<emphasis role="stringliteral">&quot;Jonas&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Jonaitis&quot;</emphasis>,&#32;{10,&#32;10,&#32;5,&#32;6,&#32;2,&#32;8},&#32;7,&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>,&#32;7.0);
<anchor xml:id="_tests_8cpp_source_1l00013"/>00013 
<anchor xml:id="_tests_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;Copy&#32;konstruktorius&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student2(student1);
<anchor xml:id="_tests_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getVardas()&#32;==&#32;student2.<link linkend="_class_zmogus_1aaea44664c236e2fadf022f3821862499">getVardas</link>());
<anchor xml:id="_tests_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getPavarde()&#32;==&#32;student2.<link linkend="_class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63">getPavarde</link>());
<anchor xml:id="_tests_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getEgz()&#32;==&#32;student2.<link linkend="_class_stud_1a25998973a74b359a72a95d49beae0c08">getEgz</link>());
<anchor xml:id="_tests_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getVm()&#32;==&#32;student2.<link linkend="_class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6">getVm</link>());
<anchor xml:id="_tests_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getGalutinis()&#32;==&#32;student2.<link linkend="_class_stud_1a45c7d38ccc4203365b448101344ba4e2">getGalutinis</link>());
<anchor xml:id="_tests_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00023"/>00023 
<anchor xml:id="_tests_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;Copy&#32;priskyrimo&#32;operatorius&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student3&#32;=&#32;student1;
<anchor xml:id="_tests_8cpp_source_1l00027"/>00027 
<anchor xml:id="_tests_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getVardas()&#32;==&#32;student3.<link linkend="_class_zmogus_1aaea44664c236e2fadf022f3821862499">getVardas</link>());
<anchor xml:id="_tests_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getPavarde()&#32;==&#32;student3.<link linkend="_class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63">getPavarde</link>());
<anchor xml:id="_tests_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getEgz()&#32;==&#32;student3.<link linkend="_class_stud_1a25998973a74b359a72a95d49beae0c08">getEgz</link>());
<anchor xml:id="_tests_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getVm()&#32;==&#32;student3.<link linkend="_class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6">getVm</link>());
<anchor xml:id="_tests_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student1.getGalutinis()&#32;==&#32;student3.<link linkend="_class_stud_1a45c7d38ccc4203365b448101344ba4e2">getGalutinis</link>());
<anchor xml:id="_tests_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00034"/>00034 
<anchor xml:id="_tests_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;Move&#32;konstruktorius&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student4(std::move(student1));
<anchor xml:id="_tests_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student4.<link linkend="_class_zmogus_1aaea44664c236e2fadf022f3821862499">getVardas</link>()&#32;==&#32;<emphasis role="stringliteral">&quot;Jonas&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student4.<link linkend="_class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63">getPavarde</link>()&#32;==&#32;<emphasis role="stringliteral">&quot;Jonaitis&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student4.<link linkend="_class_stud_1a25998973a74b359a72a95d49beae0c08">getEgz</link>()&#32;==&#32;7);
<anchor xml:id="_tests_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student4.<link linkend="_class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6">getVm</link>()&#32;==&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student4.<link linkend="_class_stud_1a45c7d38ccc4203365b448101344ba4e2">getGalutinis</link>()&#32;==&#32;7.0);
<anchor xml:id="_tests_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00044"/>00044 
<anchor xml:id="_tests_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;Move&#32;priskyrimo&#32;operatorius&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student5;
<anchor xml:id="_tests_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;student5&#32;=&#32;std::move(student1);
<anchor xml:id="_tests_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student5.<link linkend="_class_zmogus_1aaea44664c236e2fadf022f3821862499">getVardas</link>()&#32;==&#32;<emphasis role="stringliteral">&quot;Jonas&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student5.<link linkend="_class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63">getPavarde</link>()&#32;==&#32;<emphasis role="stringliteral">&quot;Jonaitis&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student5.<link linkend="_class_stud_1a25998973a74b359a72a95d49beae0c08">getEgz</link>()&#32;==&#32;7);
<anchor xml:id="_tests_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student5.<link linkend="_class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6">getVm</link>()&#32;==&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student5.<link linkend="_class_stud_1a45c7d38ccc4203365b448101344ba4e2">getGalutinis</link>()&#32;==&#32;7.0);
<anchor xml:id="_tests_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;Input&#32;operatorius&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::istringstream&#32;input(<emphasis role="stringliteral">&quot;Petras&#32;Petraitis&#32;10&#32;3&#32;8&#32;7&#32;6&#32;5&#32;10&#32;3&#32;5&#32;1&#32;7&#32;8&#32;a&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student6;
<anchor xml:id="_tests_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;&gt;&gt;&#32;student6;
<anchor xml:id="_tests_8cpp_source_1l00060"/>00060 
<anchor xml:id="_tests_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student6.<link linkend="_class_zmogus_1aaea44664c236e2fadf022f3821862499">getVardas</link>()&#32;==&#32;<emphasis role="stringliteral">&quot;Petras&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student6.<link linkend="_class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63">getPavarde</link>()&#32;==&#32;<emphasis role="stringliteral">&quot;Petraitis&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student6.<link linkend="_class_stud_1a25998973a74b359a72a95d49beae0c08">getEgz</link>()&#32;==&#32;8);
<anchor xml:id="_tests_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student6.<link linkend="_class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6">getVm</link>()&#32;==&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00066"/>00066 
<anchor xml:id="_tests_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;
<anchor xml:id="_tests_8cpp_source_1l00068"/>00068 }
<anchor xml:id="_tests_8cpp_source_1l00069"/><link linkend="_tests_8cpp_1aab1e5ab76078e26f729c144be96ddf12">00069</link> <link linkend="_tests_8cpp_1aecce09c376d8f167628ba794c11455c3">TEST_CASE</link>(<emphasis role="stringliteral">&quot;Kitu&#32;programos&#32;funkciju&#32;testai&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00070"/>00070 {
<anchor xml:id="_tests_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student7(<emphasis role="stringliteral">&quot;Petras&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Petraitis&quot;</emphasis>,&#32;{10,&#32;9,&#32;8},&#32;7,&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>,&#32;0.0);
<anchor xml:id="_tests_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<link linkend="_class_stud">Stud</link>&#32;student8(<emphasis role="stringliteral">&quot;Petras&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Petraitis&quot;</emphasis>,&#32;{7,&#32;6,&#32;5},&#32;7,&#32;<emphasis role="charliteral">&apos;m&apos;</emphasis>,&#32;0.0);
<anchor xml:id="_tests_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;
<anchor xml:id="_tests_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;FinalScore()&#32;testas&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;student7.<link linkend="_class_stud_1a07f94d74e9e563756d78605ac8093a9a">FinalScore</link>();
<anchor xml:id="_tests_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student7.getGalutinis()&#32;==&#32;Approx(7.8));
<anchor xml:id="_tests_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_tests_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;student8.FinalScore();
<anchor xml:id="_tests_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(student8.getGalutinis()&#32;==&#32;Approx(6.6));
<anchor xml:id="_tests_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00082"/>00082 }
<anchor xml:id="_tests_8cpp_source_1l00083"/><link linkend="_tests_8cpp_1ab3bc665735702c0bd2f80f1656468587">00083</link> <link linkend="_tests_8cpp_1aecce09c376d8f167628ba794c11455c3">TEST_CASE</link>(<emphasis role="stringliteral">&quot;Vektoriaus&#32;klasės&#32;testai&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00084"/>00084 {
<anchor xml:id="_tests_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<link linkend="_class_vektor">Vektor&lt;Stud&gt;</link>&#32;vektorius;
<anchor xml:id="_tests_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;vektorius.<link linkend="_class_vektor_1a9aa67f181dc9c7a210c46d11df876539">push_back</link>(<link linkend="_class_stud">Stud</link>(<emphasis role="stringliteral">&quot;Jonas&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Jonaitis&quot;</emphasis>,&#32;{10,&#32;9,&#32;8},&#32;7,&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>,&#32;0.0));
<anchor xml:id="_tests_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;vektorius.<link linkend="_class_vektor_1a9aa67f181dc9c7a210c46d11df876539">push_back</link>(<link linkend="_class_stud">Stud</link>(<emphasis role="stringliteral">&quot;Petras&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Petraitis&quot;</emphasis>,&#32;{7,&#32;6,&#32;5},&#32;7,&#32;<emphasis role="charliteral">&apos;m&apos;</emphasis>,&#32;0.0));
<anchor xml:id="_tests_8cpp_source_1l00088"/>00088 
<anchor xml:id="_tests_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;Vektoriaus&#32;dydis&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(vektorius.<link linkend="_class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0">size</link>()&#32;==&#32;2);
<anchor xml:id="_tests_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00093"/>00093 
<anchor xml:id="_tests_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;Vektoriaus&#32;indeksavimas&#32;[]&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(vektorius[0].getVardas()&#32;==&#32;<emphasis role="stringliteral">&quot;Jonas&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(vektorius[1].getPavarde()&#32;==&#32;<emphasis role="stringliteral">&quot;Petraitis&quot;</emphasis>);
<anchor xml:id="_tests_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<link linkend="_class_vektor">Vektor&lt;int&gt;</link>test;
<anchor xml:id="_tests_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;test.<link linkend="_class_vektor_1a9aa67f181dc9c7a210c46d11df876539">push_back</link>(1);
<anchor xml:id="_tests_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;test.<link linkend="_class_vektor_1a9aa67f181dc9c7a210c46d11df876539">push_back</link>(2);
<anchor xml:id="_tests_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;
<anchor xml:id="_tests_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;pop_back()&#32;testas&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test.<link linkend="_class_vektor_1acdd650cea26a2d95119a5710fda9b5d8">pop_back</link>();
<anchor xml:id="_tests_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test.<link linkend="_class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0">size</link>()&#32;==&#32;1);
<anchor xml:id="_tests_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test[0]&#32;==&#32;1);
<anchor xml:id="_tests_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;reserve()&#32;testas&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test.<link linkend="_class_vektor_1ae2eaebca369760c7e0757965e111464a">reserve</link>(25);
<anchor xml:id="_tests_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test.<link linkend="_class_vektor_1a776eab835626a981955ec020cef5001c">capacity</link>()&#32;==&#32;25);
<anchor xml:id="_tests_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;shrink_to_fit()&#32;testas&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;{&#32;&#32;&#32;
<anchor xml:id="_tests_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test.<link linkend="_class_vektor_1ae2eaebca369760c7e0757965e111464a">reserve</link>(25);
<anchor xml:id="_tests_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test.<link linkend="_class_vektor_1aeb4dcc6a639c7622777995808c3262a8">shrink_to_fit</link>();
<anchor xml:id="_tests_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test.<link linkend="_class_vektor_1a776eab835626a981955ec020cef5001c">capacity</link>()&#32;==&#32;2);
<anchor xml:id="_tests_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;SECTION(<emphasis role="stringliteral">&quot;swap()&#32;testas&quot;</emphasis>)
<anchor xml:id="_tests_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tests_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_vektor">Vektor&lt;int&gt;</link>test2;
<anchor xml:id="_tests_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test2.<link linkend="_class_vektor_1a9aa67f181dc9c7a210c46d11df876539">push_back</link>(3);
<anchor xml:id="_tests_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test2.<link linkend="_class_vektor_1a9aa67f181dc9c7a210c46d11df876539">push_back</link>(4);
<anchor xml:id="_tests_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test.<link linkend="_class_vektor_1ac2cc3de61fa2ccbc9b1c06839e3b7486">swap</link>(test2);
<anchor xml:id="_tests_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test.<link linkend="_class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0">size</link>()&#32;==&#32;2);
<anchor xml:id="_tests_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test[0]&#32;==&#32;3);
<anchor xml:id="_tests_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test2.<link linkend="_class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0">size</link>()&#32;==&#32;2);
<anchor xml:id="_tests_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REQUIRE(test2[0]&#32;==&#32;1);
<anchor xml:id="_tests_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tests_8cpp_source_1l00131"/>00131 }
</programlisting></section>
