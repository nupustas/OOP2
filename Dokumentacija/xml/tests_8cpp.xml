<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="tests_8cpp" kind="file" language="C++">
    <compoundname>tests.cpp</compoundname>
    <includes local="yes">catch.hpp</includes>
    <includes refid="student_8h" local="yes">student.h</includes>
    <includes refid="human_8h" local="yes">human.h</includes>
    <includes refid="manolib_8h" local="yes">manolib.h</includes>
    <includes refid="functions_8h" local="yes">functions.h</includes>
    <includes refid="vector_8h" local="yes">vector.h</includes>
    <incdepgraph>
      <node id="21">
        <label>functions.h</label>
        <link refid="functions_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>human.h</label>
        <link refid="human_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>manolib.h</label>
        <link refid="manolib_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>student.h</label>
        <link refid="student_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tests.cpp</label>
        <link refid="tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
      <node id="2">
        <label>catch.hpp</label>
      </node>
      <node id="15">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>ctime</label>
      </node>
      <node id="8">
        <label>deque</label>
      </node>
      <node id="20">
        <label>exception</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>iomanip</label>
      </node>
      <node id="17">
        <label>ios</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="7">
        <label>list</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="tests_8cpp_1a656eb5868e824d59f489f910db438420" prot="public" static="no">
        <name>CATCH_CONFIG_MAIN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests.cpp" line="1" column="9" bodyfile="src/tests.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="tests_8cpp_1aecce09c376d8f167628ba794c11455c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Studentu klases penkiu pirstu taisykles testas&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Studentu klases penkiu pirstu taisykles testas&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests.cpp" line="10" column="1" bodyfile="src/tests.cpp" bodystart="10" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="tests_8cpp_1aab1e5ab76078e26f729c144be96ddf12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Kitu programos funkciju testai&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Kitu programos funkciju testai&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests.cpp" line="69" column="1" bodyfile="src/tests.cpp" bodystart="69" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="tests_8cpp_1ab3bc665735702c0bd2f80f1656468587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Vektoriaus klasės testai&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Vektoriaus klasės testai&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests.cpp" line="83" column="1" bodyfile="src/tests.cpp" bodystart="83" bodyend="131"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="tests_8cpp_1a656eb5868e824d59f489f910db438420" refkind="member"><highlight class="preprocessor">#define<sp/>CATCH_CONFIG_MAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="student_8h" kindref="compound">student.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="human_8h" kindref="compound">human.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="manolib_8h" kindref="compound">manolib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="functions_8h" kindref="compound">functions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector_8h" kindref="compound">vector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="tests_8cpp_1aecce09c376d8f167628ba794c11455c3" refkind="member"><highlight class="normal"><ref refid="tests_8cpp_1aecce09c376d8f167628ba794c11455c3" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Studentu<sp/>klases<sp/>penkiu<sp/>pirstu<sp/>taisykles<sp/>testas&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student1(</highlight><highlight class="stringliteral">&quot;Jonas&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Jonaitis&quot;</highlight><highlight class="normal">,<sp/>{10,<sp/>10,<sp/>5,<sp/>6,<sp/>2,<sp/>8},<sp/>7,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>7.0);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Copy<sp/>konstruktorius&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student2(student1);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getVardas()<sp/>==<sp/>student2.<ref refid="class_zmogus_1aaea44664c236e2fadf022f3821862499" kindref="member">getVardas</ref>());</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getPavarde()<sp/>==<sp/>student2.<ref refid="class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63" kindref="member">getPavarde</ref>());</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getEgz()<sp/>==<sp/>student2.<ref refid="class_stud_1a25998973a74b359a72a95d49beae0c08" kindref="member">getEgz</ref>());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getVm()<sp/>==<sp/>student2.<ref refid="class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6" kindref="member">getVm</ref>());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getGalutinis()<sp/>==<sp/>student2.<ref refid="class_stud_1a45c7d38ccc4203365b448101344ba4e2" kindref="member">getGalutinis</ref>());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Copy<sp/>priskyrimo<sp/>operatorius&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student3<sp/>=<sp/>student1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getVardas()<sp/>==<sp/>student3.<ref refid="class_zmogus_1aaea44664c236e2fadf022f3821862499" kindref="member">getVardas</ref>());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getPavarde()<sp/>==<sp/>student3.<ref refid="class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63" kindref="member">getPavarde</ref>());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getEgz()<sp/>==<sp/>student3.<ref refid="class_stud_1a25998973a74b359a72a95d49beae0c08" kindref="member">getEgz</ref>());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getVm()<sp/>==<sp/>student3.<ref refid="class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6" kindref="member">getVm</ref>());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student1.getGalutinis()<sp/>==<sp/>student3.<ref refid="class_stud_1a45c7d38ccc4203365b448101344ba4e2" kindref="member">getGalutinis</ref>());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Move<sp/>konstruktorius&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student4(std::move(student1));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student4.<ref refid="class_zmogus_1aaea44664c236e2fadf022f3821862499" kindref="member">getVardas</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Jonas&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student4.<ref refid="class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63" kindref="member">getPavarde</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Jonaitis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student4.<ref refid="class_stud_1a25998973a74b359a72a95d49beae0c08" kindref="member">getEgz</ref>()<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student4.<ref refid="class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6" kindref="member">getVm</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student4.<ref refid="class_stud_1a45c7d38ccc4203365b448101344ba4e2" kindref="member">getGalutinis</ref>()<sp/>==<sp/>7.0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Move<sp/>priskyrimo<sp/>operatorius&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student5;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>student5<sp/>=<sp/>std::move(student1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student5.<ref refid="class_zmogus_1aaea44664c236e2fadf022f3821862499" kindref="member">getVardas</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Jonas&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student5.<ref refid="class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63" kindref="member">getPavarde</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Jonaitis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student5.<ref refid="class_stud_1a25998973a74b359a72a95d49beae0c08" kindref="member">getEgz</ref>()<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student5.<ref refid="class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6" kindref="member">getVm</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student5.<ref refid="class_stud_1a45c7d38ccc4203365b448101344ba4e2" kindref="member">getGalutinis</ref>()<sp/>==<sp/>7.0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Input<sp/>operatorius&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>input(</highlight><highlight class="stringliteral">&quot;Petras<sp/>Petraitis<sp/>10<sp/>3<sp/>8<sp/>7<sp/>6<sp/>5<sp/>10<sp/>3<sp/>5<sp/>1<sp/>7<sp/>8<sp/>a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student6;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>&gt;&gt;<sp/>student6;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student6.<ref refid="class_zmogus_1aaea44664c236e2fadf022f3821862499" kindref="member">getVardas</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Petras&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student6.<ref refid="class_zmogus_1a11ee9ac120fbb7d6a4e1f4da3a602b63" kindref="member">getPavarde</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Petraitis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student6.<ref refid="class_stud_1a25998973a74b359a72a95d49beae0c08" kindref="member">getEgz</ref>()<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student6.<ref refid="class_stud_1aef03c2e2f603dd42886d7d6dbefe14b6" kindref="member">getVm</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69" refid="tests_8cpp_1aab1e5ab76078e26f729c144be96ddf12" refkind="member"><highlight class="normal"><ref refid="tests_8cpp_1aecce09c376d8f167628ba794c11455c3" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Kitu<sp/>programos<sp/>funkciju<sp/>testai&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student7(</highlight><highlight class="stringliteral">&quot;Petras&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Petraitis&quot;</highlight><highlight class="normal">,<sp/>{10,<sp/>9,<sp/>8},<sp/>7,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stud" kindref="compound">Stud</ref><sp/>student8(</highlight><highlight class="stringliteral">&quot;Petras&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Petraitis&quot;</highlight><highlight class="normal">,<sp/>{7,<sp/>6,<sp/>5},<sp/>7,<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;FinalScore()<sp/>testas&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>student7.<ref refid="class_stud_1a07f94d74e9e563756d78605ac8093a9a" kindref="member">FinalScore</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student7.getGalutinis()<sp/>==<sp/>Approx(7.8));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>student8.FinalScore();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(student8.getGalutinis()<sp/>==<sp/>Approx(6.6));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83" refid="tests_8cpp_1ab3bc665735702c0bd2f80f1656468587" refkind="member"><highlight class="normal"><ref refid="tests_8cpp_1aecce09c376d8f167628ba794c11455c3" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Vektoriaus<sp/>klasės<sp/>testai&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vektor" kindref="compound">Vektor&lt;Stud&gt;</ref><sp/>vektorius;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>vektorius.<ref refid="class_vektor_1a9aa67f181dc9c7a210c46d11df876539" kindref="member">push_back</ref>(<ref refid="class_stud" kindref="compound">Stud</ref>(</highlight><highlight class="stringliteral">&quot;Jonas&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Jonaitis&quot;</highlight><highlight class="normal">,<sp/>{10,<sp/>9,<sp/>8},<sp/>7,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>0.0));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>vektorius.<ref refid="class_vektor_1a9aa67f181dc9c7a210c46d11df876539" kindref="member">push_back</ref>(<ref refid="class_stud" kindref="compound">Stud</ref>(</highlight><highlight class="stringliteral">&quot;Petras&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Petraitis&quot;</highlight><highlight class="normal">,<sp/>{7,<sp/>6,<sp/>5},<sp/>7,<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">,<sp/>0.0));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Vektoriaus<sp/>dydis&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(vektorius.<ref refid="class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0" kindref="member">size</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Vektoriaus<sp/>indeksavimas<sp/>[]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(vektorius[0].getVardas()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Jonas&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(vektorius[1].getPavarde()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Petraitis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vektor" kindref="compound">Vektor&lt;int&gt;</ref>test;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_vektor_1a9aa67f181dc9c7a210c46d11df876539" kindref="member">push_back</ref>(1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_vektor_1a9aa67f181dc9c7a210c46d11df876539" kindref="member">push_back</ref>(2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;pop_back()<sp/>testas&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.<ref refid="class_vektor_1acdd650cea26a2d95119a5710fda9b5d8" kindref="member">pop_back</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test.<ref refid="class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0" kindref="member">size</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test[0]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;reserve()<sp/>testas&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.<ref refid="class_vektor_1ae2eaebca369760c7e0757965e111464a" kindref="member">reserve</ref>(25);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test.<ref refid="class_vektor_1a776eab835626a981955ec020cef5001c" kindref="member">capacity</ref>()<sp/>==<sp/>25);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;shrink_to_fit()<sp/>testas&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.<ref refid="class_vektor_1ae2eaebca369760c7e0757965e111464a" kindref="member">reserve</ref>(25);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.<ref refid="class_vektor_1aeb4dcc6a639c7622777995808c3262a8" kindref="member">shrink_to_fit</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test.<ref refid="class_vektor_1a776eab835626a981955ec020cef5001c" kindref="member">capacity</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;swap()<sp/>testas&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vektor" kindref="compound">Vektor&lt;int&gt;</ref>test2;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test2.<ref refid="class_vektor_1a9aa67f181dc9c7a210c46d11df876539" kindref="member">push_back</ref>(3);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test2.<ref refid="class_vektor_1a9aa67f181dc9c7a210c46d11df876539" kindref="member">push_back</ref>(4);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.<ref refid="class_vektor_1ac2cc3de61fa2ccbc9b1c06839e3b7486" kindref="member">swap</ref>(test2);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test.<ref refid="class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0" kindref="member">size</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test[0]<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test2.<ref refid="class_vektor_1ac2fbba41a1816fcdf6e3a7492719cdf0" kindref="member">size</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(test2[0]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests.cpp"/>
  </compounddef>
</doxygen>
